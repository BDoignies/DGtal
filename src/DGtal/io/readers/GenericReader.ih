/**
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 **/
//LICENSE-END
/**
 * @file GenericWriter.ih
 * @author David Coeurjolly (\c david.coeurjolly@liris.cnrs.fr )
 * Laboratoire d'InfoRmatique en Image et Syst√®mes d'information - LIRIS (CNRS, UMR 5205), CNRS, France
 *
 * @date 2010/09/02
 *
 * Implementation of inline methods defined in GenericWriter.h
 *
 * This file is part of the DGtal library.
 */


//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
#include <boost/archive/text_iarchive.hpp>
#include <boost/archive/xml_iarchive.hpp>
#include <boost/archive/binary_iarchive.hpp>
//////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////


namespace DGtal {
template<typename O>
typename O
GenericWriter<O>::importTXT(const std::string & filename)
{
 
  std::ifstream in;
  
  //Default constructor
  O  aObject();

  in.open(filename.c_str());
  boost::archive::text_iarchive oa(in);

  ia >> aObject;
  
  in.close(); 

  return true;
}


template<typename O>
typename O 
GenericWriter<O>::importXML(const std::string & filename)
{
  ASSERT("Not yet implemented"=="");
}

template<typename O>
typename O 
GenericWriter<O>::importBIN(const std::string & filename)
{
  ASSERT("Not yet implemented"=="");
}

}//namespace
