/**
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 **/

/**
 * @file NumbersReader.ih
 * @author Bertrand Kerautret (\c kerautre@loria.fr )
 * LORIA (CNRS, UMR 7503), University of Nancy, France
 *
 * @date 2013/11/30
 *
 * Implementation of inline methods defined in NumbersReader.h
 *
 * This file is part of the DGtal library.
 */

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
#include <sstream>
#include <fstream>
//////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////////
// Implementation of inline methods                                          //




template<typename TNumber>
inline
std::vector<TNumber>
DGtal::NumbersReader<TNumber>::getNumbersFromFile (const std::string &aFilename,  unsigned int aPosition)
{
  std::ifstream infile;
  infile.open (aFilename.c_str(), std::ifstream::in);
  return NumbersReader<TNumber>::getNumbersFromInputStream(infile, aPosition);
}


template<typename TNumber>
inline
std::vector< TNumber >  
DGtal::NumbersReader<TNumber>::getNumbersFromInputStream (std::istream &in, 
                                                          unsigned int aPosition)
{
  std::vector<TNumber> vectResult;
  std::string str;
  getline(in, str );
  while ( in.good() ){
    if ( ( str != "" ) && ( str[ 0 ] != '#' ) ){
      std::istringstream in_str( str );
      TNumber val;
      bool found = false;
      unsigned int idx = 0;
      while ( in_str.good()&& !found){
        bool isOK = !!(in_str >> val); //Ulgy fix to clang++ issue http://www.mavetju.org/mail/view_thread.php?list=freebsd-ports&id=3586822&thread=yes   
          if (isOK && (idx == aPosition) ){
            found=true;
            vectResult.push_back(val);
          }
          idx++;
      }
    }    
    getline(in, str );
  }
  return vectResult;

}


//                                                                           //
///////////////////////////////////////////////////////////////////////////////
