/**
 * @file DomainPredicate.ih
 * @author Jacques-Olivier Lachaud (\c jacques-olivier.lachaud@univ-savoie.fr )
 * Laboratory of Mathematics (CNRS, UMR 5807), University of Savoie, France
 *
 * @date 2010/07/10
 *
 * Implementation of inline methods defined in DomainPredicate.h
 *
 * This file is part of the DGtal library.
 */


//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
//////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// ----------------------- Standard services ------------------------------

//------------------------------------------------------------------------------
template <typename TDomain>
inline
DGtal::DomainPredicate<TDomain>
::DomainPredicate( const Domain & aDomain )
  : myDomain( &aDomain )
{
}
//------------------------------------------------------------------------------
template <typename TDomain>
inline
DGtal::DomainPredicate<TDomain>
::DomainPredicate( const DomainPredicate & other )
  : myDomain( other.myDomain )
{
}
//------------------------------------------------------------------------------
template <typename TDomain>
inline
const TDomain & 
DGtal::DomainPredicate<TDomain>
::domain() const
{
  return *myDomain;
}
//------------------------------------------------------------------------------
template <typename TDomain>
inline
bool
DGtal::DomainPredicate<TDomain>
::operator()( const Point & p ) const
{
  //  std::cerr << "DomainPred.operator(" << p << ")" << std::endl;
  return myDomain->isInside( p );
}
//------------------------------------------------------------------------------

//                                                                           //
///////////////////////////////////////////////////////////////////////////////


