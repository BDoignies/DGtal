/**
 * @file moduleCatch.dox
 * @author David Coeurjolly (\c david.coeurjolly@liris.cnrs.fr )
 * Laboratoire d'InfoRmatique en Image et Systemes d'information - LIRIS (CNRS, UMR 5205), CNRS, France
 *
 * @date 2015/09/20
 *
 * Documentation file for feature Catch
 *
 * This file is part of the DGtal library.
 */

/*
 * Useful to avoid writing DGtal:: in front of every class.
 * Do not forget to add an entry in src/DGtal/base/Config.h.in !
 */
namespace DGtal {
//----------------------------------------
/*!
@page moduleCatch Unit test in DGtal using Catch 
@writers David Coeurjolly

[TOC]


\section sectCatch1 Introduction

[Catch](https://github.com/philsquared/Catch) Is a C++ framework to
help unit test design. More precisely, thanks to couple of C++, Catch
enabled unit test are easy to write and easy to review.

In this documentation page, we just describe how to write such test
files in DGtal. For a complete documentation of Catch, please refer to
[Catch](https://github.com/philsquared/Catch).

\section sectCatch2 Catch in DGtal

We illustrate here basic Catch usages using some tests on the
PointVector class.

First of all, all test files must include the following header:

@snippet exampleCatch.cpp exampleCatch-include

Once this header included, there is no need to create a @e main()
function in your @e cpp file, everything is handled automatically.

Unit tests are decomposed into TEST_CASE and SECTION in a test
case. For example, the following code performs some tests on the
PointVector class (see exampleCatch.cpp for details).

@snippet exampleCatch.cpp exampleCatch-example1

When compiling this simple test, the executable handles several
commandline options. For example

@code
./exampleCatch
@endcode
runs all test cases and sections. 

@code
./exampleCatch -s
@endcode
runs all tests with detailed messages

@code
./exampleCatch -d yes
@endcode
runs all tests with timings for each section.

@code
./exampleCatch --help
@endcode
displays all command-line options.

Please have a look to [Catch](https://github.com/philsquared/Catch)
for further macros and comments. For instance, tags can be associated
with sections and test cases allowing to only run specific tests.



@section sectCatch2 Advanced usages




*/

}
