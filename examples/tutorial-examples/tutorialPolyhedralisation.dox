/* 
 * Useful to avoid writing DGtal:: in front of every class.
 */
namespace DGtal {

/**
   
@page tutorialPolyhedralisation  Tutorial: making a polyhedron from a digital object

@writers Jacques-Olivier Lachaud

This tutorial shows you how to construct a polyhedron (polyhedral
surface) from a digital object. It uses several ingredients of DGtal:

- readers: to read an ".obj" file into memory
- images: to store the ".obj" file into memory
- predicate: to represent the characteristic function of the digital object
- cellular space: the cellular digital space in which the boundary of the digital object is well defined
- digital surface: to connect all boundary elements of the digital object as a graph
- graph visitor: to define neighborhoods on the digital object boundary
- digital plane computer: to recognize points of the boundary that belongs to the same plane
- umbrellas: to decompose the digital surface into cells
- viewers: to see intermediate and final results of our algorithm

[TOC]

\section tutorialPolyhedralisation_sec1 Set up your project

We will write a new C++ source file (like polyhedralizer.cpp) that
uses the DGtal library. You can follow for instance \ref
moduleHowToUseDGtal. Then you can already start with the following
skeleton that includes the main required headers.

We will also play with some .vol file. There are a few in the
directory DGtal/examples/samples. We pick below the Al Capone volume
file.

\code
string inputFilename = "DGtal/examples/samples/Al.100.vol";
\endcode

\section tutorialPolyhedralisation_sec2 Reading the volume file




*/