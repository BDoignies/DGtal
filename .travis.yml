language: cpp

compiler:
  - gcc
  - clang

cache: apt

notifications:
  slack: dgtal:FObxCZFoeQkkaRuktJD5uhnN

matrix:
 fast_finish: true      


env:
  - BTYPE="-DCMAKE_BUILD_TYPE=Debug -DWITH_MAGICK=true -DWITH_GMP=true  -DBUILD_TESTING=ON  -DWARNING_AS_ERROR=ON -DWITH_COVERAGE=true"
  - BTYPE="-DCMAKE_BUILD_TYPE=Debug -DWITH_CAIRO=true -DWITH_QGLVIEWER=true -DBUILD_TESTING=ON -DWARNING_AS_ERROR=OFF"
  - BTYPE="-DCMAKE_BUILD_TYPE=Debug -DWITH_CAIRO=true  -DWITH_GMP=true" DOC="true"


before_install:
   - openssl aes-256-cbc -K $encrypted_73d1df012ee4_key -iv $encrypted_73d1df012ee4_iv -in .travis/dgtal_rsa.enc -out .travis/dgtal_rsa -d

before_script:
  - sudo apt-get -qq update
  - sudo apt-get -qq install libboost-program-options-dev libcairo2-dev doxygen graphviz libgraphicsmagick++1-dev libboost-system-dev libgmp-dev libqglviewer-qt4-dev libinsighttoolkit3-dev libgdcm2-dev
  - gem install coveralls-lcov
  - sudo apt-get install -y lcov

script:
  - cmake . $BTYPE
  - if [ ! $DOC == "true" ]; then  make DGtal && make DGtalIO; fi
  - if [ ! $DOC == "true" ]; then  cd examples && make -j 3 ; fi
  - if [ ! $DOC == "true" ]; then  cd ../tests &&  make &&  cd .. ; fi
  - if [ ! $DOC == "true" ]; then  make test;  fi

after_script:
  - if [ ! $DOC == "true" ]; then make lcov; fi
  - if [ ! $DOC == "true" ]; then coveralls-lcov --source-encoding=ISO-8859-1 coverage/stap.info; fi


##
## Building the documentation
##
after_success:
  - if [ $DOC == "true" ]; then make doc; fi
  - if [ $DOC == "true" ]; ssh-add .travis/dgtal_rsa; fi
  - if [ $DOC == "true" ]; then rsync -azv --delete --delete-after html/ dgtal@liris.cnrs.fr:/home/dgtal/public_html/doc/nightly/; fi
