language: cpp

compiler:
  - gcc
  - clang

cache: apt

notifications:
  slack: dgtal:FObxCZFoeQkkaRuktJD5uhnN

env:
  - CONFIG="Debug,Magick,GMP,Coverage"
  - CONFIG="Debug,Cairo,QGLviewer,HDF5"
  - CONFIG="Documentation,Debug,Cairo,GMP"

matrix:
  fast_finish: true 
  exclude:
    - os: linux
      env: CONFIG="Documentation,Debug,Cairo,GMP"
    - compiler: gcc
      os: osx
      env: CONFIG="Documentation,Debug,Cairo,GMP"
    - os: osx
      compiler: gcc

   

before_install:
   - openssl aes-256-cbc -K $encrypted_73d1df012ee4_key -iv $encrypted_73d1df012ee4_iv -in .travis/dgtal_rsa.enc -out .travis/dgtal_rsa -d
   - chmod 600 .travis/dgtal_rsa

   - if [ $CONFIG == "Debug,Magick,GMP,Coverage" ]; then BTYPE="-DCMAKE_BUILD_TYPE=Debug  -DWITH_MAGICK=true -DWITH_GMP=true  -DBUILD_TESTING=ON  -DWARNING_AS_ERROR=ON -DWITH_COVERAGE=true"; DOC="false";  fi
   - if [ $CONFIG == "Debug,Cairo,QGLviewer,HDF5" ]; then BTYPE="-DCMAKE_BUILD_TYPE=Debug -DWITH_HDF5=true -DWITH_CAIRO=true -DWITH_QGLVIEWER=true -DBUILD_TESTING=ON -DWARNING_AS_ERROR=OFF"; DOC="false"; fi
   - if [ $CONFIG == "Documentation,Debug,Cairo,GMP" ]; then BTYPE="-DCMAKE_BUILD_TYPE=Debug -DWITH_CAIRO=true  -DWITH_GMP=true"; DOC="true"; fi
   - 


before_script:
  - if [ $TRAVIS_OS_NAME == linux ]; then  sudo apt-get -qq update &&  sudo apt-get -qq install libhdf5-serial-dev libboost-program-options-dev libcairo2-dev doxygen graphviz libgraphicsmagick++1-dev libboost-system-dev libgmp-dev libqglviewer-qt4-dev libinsighttoolkit3-dev libgdcm2-dev lcov; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then gem install coveralls-lcov; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update; brew install boost doxygen hdf5 graphviz graphicsmagick homebrew/science/insighttoolkit gmp libqglviewer; sudo ln -s /usr/local/Cellar/libqglviewer/2.5.1/QGLViewer.framework /Library/Frameworks/ ; echo "done";fi

script:
  - cmake . $BTYPE
  - echo $DOC
  - echo $BTYPE
  - if [ $DOC == "false" ]; then  make DGtal && make DGtalIO; fi
  - if [ $DOC == "false" ]; then  cd examples && make -j 3 ; fi
  - if [ $DOC == "false" ]; then  cd ../tests &&  make &&  cd .. ; fi
  - if [ $DOC == "false" ]; then  make test;  fi

after_script:
  - if [ $DOC == "false" ]; then make lcov; fi
  - if [ $DOC == "false" ]; then coveralls-lcov --source-encoding=ISO-8859-1 coverage/stap.info; fi


###
## Building the documentation
###

after_success:
  - if [ $DOC == "true" ]; then make doc; fi
  - if [ $DOC == "true" ]; then rsync -azv --delete --delete-after -e 'ssh -oStrictHostKeyChecking=no -i  .travis/dgtal_rsa' html/ dgtal@liris.cnrs.fr:/home/dgtal/public_html/doc/nightly/; fi
  - if [ $DOC == "true" ]; then if [ $TRAVIS_OS_NAME == "osx" ]; then cd html; make ; wget http://dgtal.org/doc/docset/template.tgz ; tar zxvf template.tgz ; mv template/* org.dgtal.docset ; tar zcvf DGtal-devel.tgz org.dgtal.docset ; rsync  -azv --delete --delete-after -e 'ssh -oStrictHostKeyChecking=no -i  .travis/dgtal_rsa' DGtal-devel.tgz dgtal@liris.cnrs.fr:/home/dgtal/public_html/doc/docset ;   fi; fi

os:
  - linux
  - osx

osx_image: xcode61
