name: Documentation Commands

on:
  issue_comment:
      types: [created]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:

    permissions:
      contents: read # to fetch code (actions/checkout)
      pull-requests: write # to create comment

    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: get_round
        with:
         result-encoding: string
         script: |
           const asso = context.payload.comment.author_association
           if(asso == 'OWNER' || asso == 'MEMBER') {
             const body = context.payload.comment.body
             if(body.includes("builddoc:")) {
               const re = /\/(force-)?builddoc:(\w+)\s*/;
               if(re.test(body)){
                 const res = re.exec(body)
                 if(body.includes("force-")) {
                   return res[2]+":yes"
                 }
                 else{
                   return res[2]+":no"
                 }
               }
             }
           }
           return 'stop'
      - uses: actions/github-script@v6
        if: steps.get_round.outputs.result != 'stop'
        id: get_pr_number
        with:
         result-encoding: string
         script: |
           //get pullrequest url
           const pr_number = context.payload.issue.number
           return pr_number

      - name: Emoji-comment
        uses: actions/github-script@v6
        if: steps.get_round.outputs.result != 'stop'
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              comment_id: ${{ github.event.comment.id }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'rocket'
            })

      - uses: actions/checkout@v3
        name: "checkout branch"
        if: steps.get_round.outputs.result != 'stop'
        with:
           repository: ${{ github.repository }}
           ref: refs/pull/${{ steps.get_pr_number.outputs.result }}/merge
           token: ${{ secrets.PUSH_TO_DGTAL_GITHUB_IO_TOKEN }}
           fetch-depth: 2

      - name: install dependencies
        if: steps.get_round.outputs.result != 'stop'
        run: |
          set -x
          sudo apt-get update && sudo apt-get install -y graphviz ssh doxygen
          git config --global user.email "DGtal@dgtal.org"
          git config --global user.name "DGtal"
      - name: configure all
        if: steps.get_round.outputs.result != 'stop'
        run: |
          set -ex
          mkdir -p build_doc && cd build_doc && cmake .. -DBUILD_EXAMPLES=true -DBUILD_TESTING=true
      - name: Build and Upload Doc
        id: build_and_run
        if: steps.get_round.outputs.result != 'stop'
        run: |
          set -ex
          PR_NUMBER=${{ steps.get_pr_number.outputs.result }}
          TMP_ROUND=${{ steps.get_round.outputs.result }}
          ROUND=$(echo $TMP_ROUND | cut -d ":" -f 1)
          force=$(echo $TMP_ROUND | cut -d ":" -f 2)
          cd build_doc && make -j2 doc
      - name: Post address
        uses: actions/github-script@v6
        if: ${{ success() && steps.get_round.outputs.result != 'stop' }}
        with:
          script: |
            const tmp_round = "${{ steps.get_round.outputs.result }}";
            const id = tmp_round.indexOf(":");
            const round = tmp_round.substring(0,id);
            const address = "The documentation is built. It will be available, after a few minutes, here: https://dgtal.github.io/${{ steps.get_pr_number.outputs.result }}/"+round+"/Manual/index.html"
            github.rest.issues.createComment({
              owner: "DGtal-team",
              repo: "DGtal",
              issue_number: ${{ github.event.issue.number }},
              body: address
            });
      - name: Post error
        env:
          ERRORMSG: ${{steps.build_and_run.outputs.DoxygenError}}
        uses: actions/github-script@v6
        if: ${{ failure() && steps.get_round.outputs.result != 'stop' }}
        with:
          script: |
            const error = process.env.ERRORMSG
            const msg = "There was an error while building the doc: \n"+error
            github.rest.issues.createComment({
              owner: "DGtal-team",
              repo: "DGtal",
              issue_number: ${{ github.event.issue.number }},
              body: msg
            });
